// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MonoDevelop.Projects.Gui.Dialogs.OptionPanels {
    
    internal partial class CustomCommandWidget {
        
        private Gtk.VBox vbox1;
        
        private Gtk.HSeparator hseparator2;
        
        private Gtk.HBox hbox1;
        
        private Gtk.ComboBox comboType;
        
        private Gtk.Button buttonRemove;
        
        private Gtk.Table tableData;
        
        private Gtk.Button buttonBrowse;
        
        private Gtk.Entry entryCommand;
        
        private Gtk.Entry entryName;
        
        private Gtk.HBox hbox2;
        
        private Gtk.Button workingdirQuickInsertButton;
        
        private Gtk.Label label1;
        
        private Gtk.Label label3;
        
        private Gtk.Label labelName;
        
        private Gtk.Entry workingdirEntry;
        
        private Gtk.HBox boxData;
        
        private Gtk.CheckButton checkExternalCons;
        
        private Gtk.CheckButton checkPauseCons;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget MonoDevelop.Projects.Gui.Dialogs.OptionPanels.CustomCommandWidget
            Stetic.BinContainer.Attach(this);
            this.CanFocus = true;
            this.Events = ((Gdk.EventMask)(16384));
            this.Name = "MonoDevelop.Projects.Gui.Dialogs.OptionPanels.CustomCommandWidget";
            // Container child MonoDevelop.Projects.Gui.Dialogs.OptionPanels.CustomCommandWidget.Gtk.Container+ContainerChild
            this.vbox1 = new Gtk.VBox();
            this.vbox1.CanFocus = true;
            this.vbox1.Events = ((Gdk.EventMask)(28672));
            this.vbox1.Name = "vbox1";
            this.vbox1.Spacing = 6;
            // Container child vbox1.Gtk.Box+BoxChild
            this.hseparator2 = new Gtk.HSeparator();
            this.hseparator2.Name = "hseparator2";
            this.vbox1.Add(this.hseparator2);
            Gtk.Box.BoxChild w1 = ((Gtk.Box.BoxChild)(this.vbox1[this.hseparator2]));
            w1.Position = 0;
            w1.Expand = false;
            w1.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Spacing = 6;
            // Container child hbox1.Gtk.Box+BoxChild
            this.comboType = Gtk.ComboBox.NewText();
            this.comboType.AppendText(MonoDevelop.Core.GettextCatalog.GetString("(Select a project operation)"));
            this.comboType.AppendText(MonoDevelop.Core.GettextCatalog.GetString("Before Build"));
            this.comboType.AppendText(MonoDevelop.Core.GettextCatalog.GetString("Build"));
            this.comboType.AppendText(MonoDevelop.Core.GettextCatalog.GetString("After Build"));
            this.comboType.AppendText(MonoDevelop.Core.GettextCatalog.GetString("Before Execute"));
            this.comboType.AppendText(MonoDevelop.Core.GettextCatalog.GetString("Execute"));
            this.comboType.AppendText(MonoDevelop.Core.GettextCatalog.GetString("After Execute"));
            this.comboType.AppendText(MonoDevelop.Core.GettextCatalog.GetString("Before Clean"));
            this.comboType.AppendText(MonoDevelop.Core.GettextCatalog.GetString("Clean"));
            this.comboType.AppendText(MonoDevelop.Core.GettextCatalog.GetString("After Clean"));
            this.comboType.AppendText(MonoDevelop.Core.GettextCatalog.GetString("Custom Command"));
            this.comboType.CanFocus = true;
            this.comboType.Name = "comboType";
            this.comboType.Active = 0;
            this.hbox1.Add(this.comboType);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.hbox1[this.comboType]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.buttonRemove = new Gtk.Button();
            this.buttonRemove.CanFocus = true;
            this.buttonRemove.Name = "buttonRemove";
            this.buttonRemove.UseStock = true;
            this.buttonRemove.UseUnderline = true;
            this.buttonRemove.Label = "gtk-remove";
            this.hbox1.Add(this.buttonRemove);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.hbox1[this.buttonRemove]));
            w3.PackType = ((Gtk.PackType)(1));
            w3.Position = 1;
            w3.Expand = false;
            w3.Fill = false;
            this.vbox1.Add(this.hbox1);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.vbox1[this.hbox1]));
            w4.Position = 1;
            w4.Expand = false;
            w4.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.tableData = new Gtk.Table(((uint)(3)), ((uint)(3)), false);
            this.tableData.Name = "tableData";
            this.tableData.RowSpacing = ((uint)(6));
            this.tableData.ColumnSpacing = ((uint)(6));
            // Container child tableData.Gtk.Table+TableChild
            this.buttonBrowse = new Gtk.Button();
            this.buttonBrowse.CanFocus = true;
            this.buttonBrowse.Name = "buttonBrowse";
            this.buttonBrowse.UseUnderline = true;
            this.buttonBrowse.Label = MonoDevelop.Core.GettextCatalog.GetString("Browse...");
            this.tableData.Add(this.buttonBrowse);
            Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(this.tableData[this.buttonBrowse]));
            w5.TopAttach = ((uint)(1));
            w5.BottomAttach = ((uint)(2));
            w5.LeftAttach = ((uint)(2));
            w5.RightAttach = ((uint)(3));
            w5.XOptions = ((Gtk.AttachOptions)(4));
            w5.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableData.Gtk.Table+TableChild
            this.entryCommand = new Gtk.Entry();
            this.entryCommand.CanFocus = true;
            this.entryCommand.Name = "entryCommand";
            this.entryCommand.IsEditable = true;
            this.entryCommand.InvisibleChar = '●';
            this.tableData.Add(this.entryCommand);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.tableData[this.entryCommand]));
            w6.TopAttach = ((uint)(1));
            w6.BottomAttach = ((uint)(2));
            w6.LeftAttach = ((uint)(1));
            w6.RightAttach = ((uint)(2));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableData.Gtk.Table+TableChild
            this.entryName = new Gtk.Entry();
            this.entryName.CanFocus = true;
            this.entryName.Name = "entryName";
            this.entryName.IsEditable = true;
            this.entryName.InvisibleChar = '●';
            this.tableData.Add(this.entryName);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.tableData[this.entryName]));
            w7.LeftAttach = ((uint)(1));
            w7.RightAttach = ((uint)(2));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableData.Gtk.Table+TableChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.workingdirQuickInsertButton = new Gtk.Button();
            this.workingdirQuickInsertButton.Name = "workingdirQuickInsertButton";
            this.workingdirQuickInsertButton.UseUnderline = true;
            this.workingdirQuickInsertButton.Label = " > ";
            this.hbox2.Add(this.workingdirQuickInsertButton);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(this.hbox2[this.workingdirQuickInsertButton]));
            w8.Position = 0;
            w8.Expand = false;
            w8.Fill = false;
            this.tableData.Add(this.hbox2);
            Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(this.tableData[this.hbox2]));
            w9.TopAttach = ((uint)(2));
            w9.BottomAttach = ((uint)(3));
            w9.LeftAttach = ((uint)(2));
            w9.RightAttach = ((uint)(3));
            w9.XOptions = ((Gtk.AttachOptions)(4));
            w9.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableData.Gtk.Table+TableChild
            this.label1 = new Gtk.Label();
            this.label1.Name = "label1";
            this.label1.Xalign = 0F;
            this.label1.LabelProp = MonoDevelop.Core.GettextCatalog.GetString("Working Directory:");
            this.tableData.Add(this.label1);
            Gtk.Table.TableChild w10 = ((Gtk.Table.TableChild)(this.tableData[this.label1]));
            w10.TopAttach = ((uint)(2));
            w10.BottomAttach = ((uint)(3));
            w10.XOptions = ((Gtk.AttachOptions)(4));
            w10.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableData.Gtk.Table+TableChild
            this.label3 = new Gtk.Label();
            this.label3.Name = "label3";
            this.label3.Xalign = 0F;
            this.label3.LabelProp = MonoDevelop.Core.GettextCatalog.GetString("Command:");
            this.tableData.Add(this.label3);
            Gtk.Table.TableChild w11 = ((Gtk.Table.TableChild)(this.tableData[this.label3]));
            w11.TopAttach = ((uint)(1));
            w11.BottomAttach = ((uint)(2));
            w11.XOptions = ((Gtk.AttachOptions)(4));
            w11.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableData.Gtk.Table+TableChild
            this.labelName = new Gtk.Label();
            this.labelName.Name = "labelName";
            this.labelName.Xalign = 0F;
            this.labelName.LabelProp = MonoDevelop.Core.GettextCatalog.GetString("Name:");
            this.tableData.Add(this.labelName);
            Gtk.Table.TableChild w12 = ((Gtk.Table.TableChild)(this.tableData[this.labelName]));
            w12.XOptions = ((Gtk.AttachOptions)(4));
            w12.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableData.Gtk.Table+TableChild
            this.workingdirEntry = new Gtk.Entry();
            this.workingdirEntry.CanFocus = true;
            this.workingdirEntry.Name = "workingdirEntry";
            this.workingdirEntry.IsEditable = true;
            this.workingdirEntry.InvisibleChar = '●';
            this.tableData.Add(this.workingdirEntry);
            Gtk.Table.TableChild w13 = ((Gtk.Table.TableChild)(this.tableData[this.workingdirEntry]));
            w13.TopAttach = ((uint)(2));
            w13.BottomAttach = ((uint)(3));
            w13.LeftAttach = ((uint)(1));
            w13.RightAttach = ((uint)(2));
            w13.YOptions = ((Gtk.AttachOptions)(4));
            this.vbox1.Add(this.tableData);
            Gtk.Box.BoxChild w14 = ((Gtk.Box.BoxChild)(this.vbox1[this.tableData]));
            w14.Position = 2;
            w14.Expand = false;
            w14.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.boxData = new Gtk.HBox();
            this.boxData.Name = "boxData";
            this.boxData.Spacing = 6;
            // Container child boxData.Gtk.Box+BoxChild
            this.checkExternalCons = new Gtk.CheckButton();
            this.checkExternalCons.CanFocus = true;
            this.checkExternalCons.Name = "checkExternalCons";
            this.checkExternalCons.Label = MonoDevelop.Core.GettextCatalog.GetString("Run on e_xternal console");
            this.checkExternalCons.DrawIndicator = true;
            this.checkExternalCons.UseUnderline = true;
            this.boxData.Add(this.checkExternalCons);
            Gtk.Box.BoxChild w15 = ((Gtk.Box.BoxChild)(this.boxData[this.checkExternalCons]));
            w15.Position = 0;
            w15.Expand = false;
            w15.Fill = false;
            // Container child boxData.Gtk.Box+BoxChild
            this.checkPauseCons = new Gtk.CheckButton();
            this.checkPauseCons.CanFocus = true;
            this.checkPauseCons.Name = "checkPauseCons";
            this.checkPauseCons.Label = MonoDevelop.Core.GettextCatalog.GetString("Pause _console output");
            this.checkPauseCons.DrawIndicator = true;
            this.checkPauseCons.UseUnderline = true;
            this.boxData.Add(this.checkPauseCons);
            Gtk.Box.BoxChild w16 = ((Gtk.Box.BoxChild)(this.boxData[this.checkPauseCons]));
            w16.Position = 1;
            w16.Expand = false;
            w16.Fill = false;
            this.vbox1.Add(this.boxData);
            Gtk.Box.BoxChild w17 = ((Gtk.Box.BoxChild)(this.vbox1[this.boxData]));
            w17.Position = 3;
            w17.Expand = false;
            w17.Fill = false;
            this.Add(this.vbox1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
            this.comboType.Changed += new System.EventHandler(this.OnComboTypeChanged);
            this.buttonRemove.Clicked += new System.EventHandler(this.OnButtonRemoveClicked);
            this.workingdirEntry.Changed += new System.EventHandler(this.OnWorkingdirEntryChanged);
            this.entryName.Changed += new System.EventHandler(this.OnEntryNameChanged);
            this.entryCommand.Changed += new System.EventHandler(this.OnEntryCommandChanged);
            this.buttonBrowse.Clicked += new System.EventHandler(this.OnButtonBrowseClicked);
            this.checkExternalCons.Clicked += new System.EventHandler(this.OnCheckExternalConsClicked);
            this.checkPauseCons.Clicked += new System.EventHandler(this.OnCheckPauseConsClicked);
        }
    }
}

// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MonoDevelop.Projects.Gui.Dialogs.OptionPanels {
    
    internal partial class CommonAssemblySigningPreferences {
        
        private Gtk.VBox vbox1;
        
        private Gtk.CheckButton signAssemblyCheckbutton;
        
        private Gtk.HBox hbox1;
        
        private Gtk.Label strongNameFileLabel;
        
        private MonoDevelop.Components.FileEntry strongNameFileEntry;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget MonoDevelop.Projects.Gui.Dialogs.OptionPanels.CommonAssemblySigningPreferences
            Stetic.BinContainer.Attach(this);
            this.Name = "MonoDevelop.Projects.Gui.Dialogs.OptionPanels.CommonAssemblySigningPreferences";
            // Container child MonoDevelop.Projects.Gui.Dialogs.OptionPanels.CommonAssemblySigningPreferences.Gtk.Container+ContainerChild
            this.vbox1 = new Gtk.VBox();
            this.vbox1.Name = "vbox1";
            this.vbox1.Spacing = 6;
            // Container child vbox1.Gtk.Box+BoxChild
            this.signAssemblyCheckbutton = new Gtk.CheckButton();
            this.signAssemblyCheckbutton.CanFocus = true;
            this.signAssemblyCheckbutton.Name = "signAssemblyCheckbutton";
            this.signAssemblyCheckbutton.Label = MonoDevelop.Core.GettextCatalog.GetString("_Sign this assembly");
            this.signAssemblyCheckbutton.DrawIndicator = true;
            this.signAssemblyCheckbutton.UseUnderline = true;
            this.vbox1.Add(this.signAssemblyCheckbutton);
            Gtk.Box.BoxChild w1 = ((Gtk.Box.BoxChild)(this.vbox1[this.signAssemblyCheckbutton]));
            w1.Position = 0;
            w1.Expand = false;
            w1.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Spacing = 6;
            // Container child hbox1.Gtk.Box+BoxChild
            this.strongNameFileLabel = new Gtk.Label();
            this.strongNameFileLabel.Name = "strongNameFileLabel";
            this.strongNameFileLabel.LabelProp = MonoDevelop.Core.GettextCatalog.GetString("S_trong Name File:");
            this.strongNameFileLabel.UseUnderline = true;
            this.hbox1.Add(this.strongNameFileLabel);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.hbox1[this.strongNameFileLabel]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.strongNameFileEntry = new MonoDevelop.Components.FileEntry();
            this.strongNameFileEntry.Name = "strongNameFileEntry";
            this.hbox1.Add(this.strongNameFileEntry);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.hbox1[this.strongNameFileEntry]));
            w3.Position = 1;
            this.vbox1.Add(this.hbox1);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.vbox1[this.hbox1]));
            w4.Position = 1;
            w4.Expand = false;
            w4.Fill = false;
            this.Add(this.vbox1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
        }
    }
}

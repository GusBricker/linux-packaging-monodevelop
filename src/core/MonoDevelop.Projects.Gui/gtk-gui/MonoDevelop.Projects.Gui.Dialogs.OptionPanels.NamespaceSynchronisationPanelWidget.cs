// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MonoDevelop.Projects.Gui.Dialogs.OptionPanels {
    
    internal partial class NamespaceSynchronisationPanelWidget {
        
        private Gtk.VBox vbox2;
        
        private Gtk.CheckButton checkAssociateNamespacesDirectories;
        
        private Gtk.Alignment alignment1;
        
        private Gtk.VBox namespaceAssociationBox;
        
        private Gtk.CheckButton checkDefaultAsRoot;
        
        private Gtk.HBox hbox1;
        
        private Gtk.Label label1;
        
        private Gtk.VBox vbox4;
        
        private Gtk.RadioButton radioFlat;
        
        private Gtk.RadioButton radioHierarch;
        
        private Gtk.HBox hbox2;
        
        private Gtk.Frame previewFrame;
        
        private Gtk.Label GtkLabel6;
        
        private Gtk.CheckButton checkVSStyleResourceNames;
        
        private Gtk.Label label2;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget MonoDevelop.Projects.Gui.Dialogs.OptionPanels.NamespaceSynchronisationPanelWidget
            Stetic.BinContainer.Attach(this);
            this.Name = "MonoDevelop.Projects.Gui.Dialogs.OptionPanels.NamespaceSynchronisationPanelWidget";
            // Container child MonoDevelop.Projects.Gui.Dialogs.OptionPanels.NamespaceSynchronisationPanelWidget.Gtk.Container+ContainerChild
            this.vbox2 = new Gtk.VBox();
            this.vbox2.Name = "vbox2";
            this.vbox2.Spacing = 12;
            // Container child vbox2.Gtk.Box+BoxChild
            this.checkAssociateNamespacesDirectories = new Gtk.CheckButton();
            this.checkAssociateNamespacesDirectories.CanFocus = true;
            this.checkAssociateNamespacesDirectories.Name = "checkAssociateNamespacesDirectories";
            this.checkAssociateNamespacesDirectories.Label = MonoDevelop.Core.GettextCatalog.GetString("_Associate namespaces with directory names");
            this.checkAssociateNamespacesDirectories.DrawIndicator = true;
            this.checkAssociateNamespacesDirectories.UseUnderline = true;
            this.vbox2.Add(this.checkAssociateNamespacesDirectories);
            Gtk.Box.BoxChild w1 = ((Gtk.Box.BoxChild)(this.vbox2[this.checkAssociateNamespacesDirectories]));
            w1.Position = 0;
            w1.Expand = false;
            w1.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.alignment1 = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.alignment1.Name = "alignment1";
            this.alignment1.LeftPadding = ((uint)(24));
            // Container child alignment1.Gtk.Container+ContainerChild
            this.namespaceAssociationBox = new Gtk.VBox();
            this.namespaceAssociationBox.Name = "namespaceAssociationBox";
            this.namespaceAssociationBox.Spacing = 12;
            // Container child namespaceAssociationBox.Gtk.Box+BoxChild
            this.checkDefaultAsRoot = new Gtk.CheckButton();
            this.checkDefaultAsRoot.CanFocus = true;
            this.checkDefaultAsRoot.Name = "checkDefaultAsRoot";
            this.checkDefaultAsRoot.Label = MonoDevelop.Core.GettextCatalog.GetString("Use _default namespace as root");
            this.checkDefaultAsRoot.DrawIndicator = true;
            this.checkDefaultAsRoot.UseUnderline = true;
            this.namespaceAssociationBox.Add(this.checkDefaultAsRoot);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.namespaceAssociationBox[this.checkDefaultAsRoot]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child namespaceAssociationBox.Gtk.Box+BoxChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Spacing = 6;
            // Container child hbox1.Gtk.Box+BoxChild
            this.label1 = new Gtk.Label();
            this.label1.Name = "label1";
            this.label1.Xalign = 0F;
            this.label1.Yalign = 0F;
            this.label1.LabelProp = MonoDevelop.Core.GettextCatalog.GetString("Directory structure:");
            this.hbox1.Add(this.label1);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.hbox1[this.label1]));
            w3.Position = 0;
            w3.Expand = false;
            w3.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.vbox4 = new Gtk.VBox();
            this.vbox4.Name = "vbox4";
            this.vbox4.Spacing = 6;
            // Container child vbox4.Gtk.Box+BoxChild
            this.radioFlat = new Gtk.RadioButton(MonoDevelop.Core.GettextCatalog.GetString("_Flat"));
            this.radioFlat.CanFocus = true;
            this.radioFlat.Name = "radioFlat";
            this.radioFlat.DrawIndicator = true;
            this.radioFlat.UseUnderline = true;
            this.radioFlat.Group = new GLib.SList(System.IntPtr.Zero);
            this.vbox4.Add(this.radioFlat);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.vbox4[this.radioFlat]));
            w4.Position = 0;
            w4.Expand = false;
            w4.Fill = false;
            // Container child vbox4.Gtk.Box+BoxChild
            this.radioHierarch = new Gtk.RadioButton(MonoDevelop.Core.GettextCatalog.GetString("_Hierarchical"));
            this.radioHierarch.CanFocus = true;
            this.radioHierarch.Name = "radioHierarch";
            this.radioHierarch.DrawIndicator = true;
            this.radioHierarch.UseUnderline = true;
            this.radioHierarch.Group = this.radioFlat.Group;
            this.vbox4.Add(this.radioHierarch);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox4[this.radioHierarch]));
            w5.Position = 1;
            w5.Expand = false;
            w5.Fill = false;
            this.hbox1.Add(this.vbox4);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.hbox1[this.vbox4]));
            w6.Position = 1;
            this.namespaceAssociationBox.Add(this.hbox1);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.namespaceAssociationBox[this.hbox1]));
            w7.Position = 1;
            w7.Expand = false;
            w7.Fill = false;
            // Container child namespaceAssociationBox.Gtk.Box+BoxChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.previewFrame = new Gtk.Frame();
            this.previewFrame.WidthRequest = 400;
            this.previewFrame.Name = "previewFrame";
            this.previewFrame.ShadowType = ((Gtk.ShadowType)(4));
            this.GtkLabel6 = new Gtk.Label();
            this.GtkLabel6.Name = "GtkLabel6";
            this.GtkLabel6.LabelProp = MonoDevelop.Core.GettextCatalog.GetString("Preview");
            this.previewFrame.LabelWidget = this.GtkLabel6;
            this.hbox2.Add(this.previewFrame);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(this.hbox2[this.previewFrame]));
            w8.Position = 0;
            w8.Expand = false;
            w8.Fill = false;
            this.namespaceAssociationBox.Add(this.hbox2);
            Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(this.namespaceAssociationBox[this.hbox2]));
            w9.Position = 2;
            this.alignment1.Add(this.namespaceAssociationBox);
            this.vbox2.Add(this.alignment1);
            Gtk.Box.BoxChild w11 = ((Gtk.Box.BoxChild)(this.vbox2[this.alignment1]));
            w11.Position = 1;
            // Container child vbox2.Gtk.Box+BoxChild
            this.checkVSStyleResourceNames = new Gtk.CheckButton();
            this.checkVSStyleResourceNames.CanFocus = true;
            this.checkVSStyleResourceNames.Name = "checkVSStyleResourceNames";
            this.checkVSStyleResourceNames.Label = MonoDevelop.Core.GettextCatalog.GetString("<b>Use _Visual Studio-style resource names</b>\nVisual Studio generates a default ID for embedded resources,\ninstead of simply using the resource's filename.");
            this.checkVSStyleResourceNames.DrawIndicator = true;
            this.checkVSStyleResourceNames.UseUnderline = true;
            this.checkVSStyleResourceNames.Remove(this.checkVSStyleResourceNames.Child);
            // Container child checkVSStyleResourceNames.Gtk.Container+ContainerChild
            this.label2 = new Gtk.Label();
            this.label2.Name = "label2";
            this.label2.LabelProp = MonoDevelop.Core.GettextCatalog.GetString("<b>Use _Visual Studio-style resource names</b>\nVisual Studio generates a default ID for embedded resources, instead of simply using the resource's filename.");
            this.label2.UseMarkup = true;
            this.label2.UseUnderline = true;
            this.label2.Wrap = true;
            this.checkVSStyleResourceNames.Add(this.label2);
            this.vbox2.Add(this.checkVSStyleResourceNames);
            Gtk.Box.BoxChild w13 = ((Gtk.Box.BoxChild)(this.vbox2[this.checkVSStyleResourceNames]));
            w13.Position = 2;
            w13.Expand = false;
            w13.Fill = false;
            this.Add(this.vbox2);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Hide();
            this.checkVSStyleResourceNames.Toggled += new System.EventHandler(this.UpdatePolicyNameList);
        }
    }
}
